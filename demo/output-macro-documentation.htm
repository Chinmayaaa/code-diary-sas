<!DOCTYPE html>
<html lang="en">
<head>
<title>SAS macro and script library</title>
<meta charset="utf-8">
<style type="text/css">
</style>
</head>
<body>
<div id="header">
<h1 class="title-data">SAS macro and script library</h1>
<h2 class="title-data">September 5, 2018</h2>
</div>
<div id="TOC">
<ul class="toc">
<li class="toc_line"><a href="#demo4">Demo</a></li>
<ul class="toc">
<li class="toc_line"><a href="#org_macro_a5">org_macro_A</a></li>
<ul class="toc">
<li class="toc_line"><a href="#summary7">Summary</a></li>
<li class="toc_line"><a href="#usage10">Usage</a></li>
<li class="toc_line"><a href="#parameters13">Parameters</a></li>
<li class="toc_line"><a href="#some_other_heading17">Some other heading</a></li>
</ul>
<li class="toc_line"><a href="#org_macro_b20">org_macro_B</a></li>
<ul class="toc">
<li class="toc_line"><a href="#summary22">Summary</a></li>
<li class="toc_line"><a href="#usage25">Usage</a></li>
<li class="toc_line"><a href="#parameters28">Parameters</a></li>
<li class="toc_line"><a href="#some_other_heading33">Some other heading</a></li>
</ul>
</ul>
<li class="toc_line"><a href="#source36">Source</a></li>
<ul class="toc">
<li class="toc_line"><a href="#code_diary37">code_diary</a></li>
<ul class="toc">
<li class="toc_line"><a href="#summary40">Summary</a></li>
<li class="toc_line"><a href="#usage46">Usage</a></li>
<ul class="toc">
<li class="toc_line"><a href="#comment_block47">Comment block</a></li>
<li class="toc_line"><a href="#single_line_comments63">Single line comments</a></li>
<li class="toc_line"><a href="#document_structure68">Document structure</a></li>
</ul>
<li class="toc_line"><a href="#parameters79">Parameters</a></li>
<li class="toc_line"><a href="#notes90">Notes</a></li>
<li class="toc_line"><a href="#example96">Example</a></li>
<li class="toc_line"><a href="#final180">Final</a></li>
</ul>
<li class="toc_line"><a href="#convert_markdown_to_html184">convert_markdown_to_html</a></li>
<ul class="toc">
<li class="toc_line"><a href="#summary186">Summary</a></li>
<li class="toc_line"><a href="#usage189">Usage</a></li>
<li class="toc_line"><a href="#parameters203">Parameters</a></li>
<li class="toc_line"><a href="#final208">Final</a></li>
</ul>
<li class="toc_line"><a href="#macro_diary212">macro_diary</a></li>
<ul class="toc">
<li class="toc_line"><a href="#summary214">Summary</a></li>
<li class="toc_line"><a href="#usage217">Usage</a></li>
<li class="toc_line"><a href="#parameters220">Parameters</a></li>
<li class="toc_line"><a href="#final225">Final</a></li>
</ul>
<li class="toc_line"><a href="#sample_macro_documentation229">sample_macro_documentation</a></li>
<ul class="toc">
<li class="toc_line"><a href="#summary231">Summary</a></li>
<li class="toc_line"><a href="#usage234">Usage</a></li>
<li class="toc_line"><a href="#notes241">Notes</a></li>
<li class="toc_line"><a href="#known_issues244">Known issues</a></li>
<li class="toc_line"><a href="#version_history248">Version history</a></li>
</ul>
</ul>
<li class="toc_line"><a href="#files_without_documentation256">Files without documentation</a></li>
</ul>
</div>
<h1 id="demo4">Demo</h1>
<h2 id="org_macro_a5">org_macro_A</h2>
File location: C:\Users\righoltc\Documents\GitHub\code-diary-sas\demo\org_macro_A.sas<br>
<h3 id="summary7">Summary</h3>
The A macro, it does everything you could ever wish for.<br>
<h3 id="usage10">Usage</h3>
Use it wisely<br>
<h3 id="parameters13">Parameters</h3>
- var_99 = Description<br>
- var_100 = Description<br>
<h3 id="some_other_heading17">Some other heading</h3>
More fancy text<br>
<h2 id="org_macro_b20">org_macro_B</h2>
File location: C:\Users\righoltc\Documents\GitHub\code-diary-sas\demo\org_macro_B.sas<br>
<h3 id="summary22">Summary</h3>
Macro B for out glorious institute, it just misses the S.<br>
<h3 id="usage25">Usage</h3>
Like a macro<br>
<h3 id="parameters28">Parameters</h3>
<ul>
<li>input_1 = blabla</li>
<li>input_2 = bleh</li>
<li>input_3 = bluh</li>
</ul>
<h3 id="some_other_heading33">Some other heading</h3>
More fancy text<br>
<h1 id="source36">Source</h1>
<h2 id="code_diary37">code_diary</h2>
File location: C:\Users\righoltc\Documents\GitHub\code-diary-sas\source\code_diary.sas<br>
<h3 id="summary40">Summary</h3>
<ul>
<li>This macro parses a main file for include statements and will read specifically formatted comments to create code-generated documentation.</li>
<li>It does reads include files recursively as long as they have the format: %include "C:\dir\file.sas";</li>
<li>The output is formatted as a markdown file, which can be transfered/translated in your file format of choice.</li>
<li>The macro also reads included Stata files as long as the stata main is called using SAS' x command window and all relative path macro variables are identically defined in both SAS and Stata.</li>
</ul>
<h3 id="usage46">Usage</h3>
<h4 id="comment_block47">Comment block</h4>
The main file and included scripts need to incorporate specially formatted comment blocks to be included in the output file. An example is:<br>
The special comment block is opened with:/**<br>
The special comment block is closed with:*/<br>
/*<br>
An example of use inside the blocks is:<br>
@main :title The best documentation ever<br>
@main :authors Author One; Author Two; Author Three<br>
@main :org Our Glorious Institute<br>
@main :version 1.2.3<br>
@main A general comment<br>
@def ABC = The alphabet<br>
@stat The p-values are calculated using the carrot test for bunnies<br>
@note I'm writing this example on a Friday afternoon...<br>
A line without keyword<br>
<h4 id="single_line_comments63">Single line comments</h4>
Parsable single line comments are also supported:<br>
The line starts with: **<br>
The line ends with: ;<br>
<h4 id="document_structure68">Document structure</h4>
The lines are all grabbed and can be organized by using @keyword for the same themes (e.g. @def in the example, will put all @def lines together). Use . as a seperator for multi-level keywords, e.g. @covar.cost.<br>
There are a few special tags (e.g. @main :title) that grab the document metadata.<br>
If a line within a comment block does not have a keyword it is seen as a continuation of the previous line (in the same block)<br>
The output can be converted to any format (e.g. pdf [needs latex installed], word, html) using pandoc. (See Google for details)<br>
Go to the directory in the command window and use<br>
<ul>
<li>markdown to pdf: pandoc infile.txt --toc --latex-engine=pdflatex -o outfile.pdf</li>
<li>markdown to word: pandoc -s -S infile.txt --toc -o outfile.docx</li>
<li>markdown to html: pandoc -s infile.txt --toc -o outfile.htm</li>
</ul>
<h3 id="parameters79">Parameters</h3>
<ul>
<li>input_main_file = Is the main file for the sas project tree, all files/scripts called from this main will be read recursively. (e.g P:\project\source\main.sas)</li>
<li>out_dir = Is the output folder (e.g. P:\project\)</li>
<li>out_file = Is the resulting markdown file in which the results are written with script and line information. (e.g. workplan_coding.txt)</li>
<li>out_file_scrubbed = Is the resulting markdown file in which the comments without script and line information is written. [Optional (e.g. workplan_output.txt')]</li>
<li>debug_mode = Set to 1 to run in debug mode. (This does not delete macro data-sets for troubleshooting) [optional]</li>
<li>section_aliases = This is the dataset with keyword aliases to cause multiple keywords to map to the same section [optional]. See example for structure.</li>
<li>section_order = This is the dataset to overwrite the order of sections (all values should be negative, with the lowest order number coming first) [optional]. See example for structure.</li>
<li>section_headers = This is the dataset to determine section headers [optional]. See example for structure.</li>
<li>sections_scrubbed = This is the dataset with a list of sections to omit from the scrubbed file [optional]. See example for structure.</li>
</ul>
<h3 id="notes90">Notes</h3>
<ul>
<li>There is a practical limit to the number of include files because of the creation of the dataset _includes_&curr_script_no_text. When this exceeds 32 characters it will cause an error, because of internal sas limits.</li>
<li>The maximum of several fields is hard-coded under the comment "Define character lengths" with several %let statements. Adjust these if needed for longer comments.</li>
<li>The warning<br>WARNING: The quoted string currently being processed has become more than 262 characters long. You might have unbalanced quotation marks.<br>Is turned off for the duration of the macro.</li>
<li>Keyword comments are all saved in their own intermediate datasets, which need to meet SAS 32 character limit. This should not cause any issues as long as keywords are 20 chars or less. (Use section_headers entries to define longer headings in the created report.)</li>
</ul>
<h3 id="example96">Example</h3>
The following example demonstrates the use of the macro, the section_: inputs should have the same variable names as the example:<br>
data work.alias_list;<br>
infile datalines;<br>
input short_keyword $1-10 long_keyword $11-50;<br>
datalines;<br>
cond      condition<br>
cov       covariate<br>
covar     covariate<br>
def       definition<br>
descr     descriptive<br>
incl      inclusion<br>
excl      exclusion<br>
exp       exposure<br>
out       outcome<br>
var       variable<br>
;<br>
data work.order_list;<br>
infile datalines;<br>
input keyword $1-15 order_no 16-20;<br>
datalines;<br>
todo           -999<br>
assert         -998<br>
main           -100<br>
definition     -94<br>
variable       -92<br>
note           -90<br>
inclusion      -85<br>
exclusion      -80<br>
condition      -70<br>
exposure       -60<br>
outcome        -50<br>
covariate      -40<br>
descriptive    -30<br>
rate           -20<br>
stat           -10<br>
no_keyword     0<br>
;<br>
data work.header_list;<br>
infile datalines;<br>
input keyword $1-15 header $16-50;<br>
datalines;<br>
condition      Condition criteria<br>
covariate      Covariates<br>
definition     Definitions<br>
descriptive    Descriptive tables<br>
exclusion      Exclusion criteria<br>
exposure       Exposures<br>
inclusion      Inclusion criteria<br>
main           Main<br>
no_keyword     General<br>
note           Notes<br>
outcome        Outcomes<br>
rate           Rate tables<br>
stat           Statistics<br>
todo           Task list<br>
variable       Variables<br>
;<br>
data work.scrub_list;<br>
infile datalines;<br>
input keyword $1-15;<br>
datalines;<br>
assert<br>
todo<br>
;<br>
%parse_comments(<br>
input_main_file = &SOURCE_ROOT\main_sas.sas,<br>
out_dir = P:\project\<br>
out_file = workplan_coding.txt,<br>
out_file_scrubbed = workplan_output.txt,<br>
section_aliases = work.alias_list,<br>
section_order = work.order_list,<br>
section_headers = work.header_list,<br>
sections_scrubbed = work.scrub_list<br>
);<br>
<h3 id="final180">Final</h3>
Authors: Christiaan Righolt<br>
Copyright (c) 2016 Vaccine and Drug Evaluation Centre, Winnipeg.<br>
<h2 id="convert_markdown_to_html184">convert_markdown_to_html</h2>
File location: C:\Users\righoltc\Documents\GitHub\code-diary-sas\source\convert_markdown_to_html.sas<br>
<h3 id="summary186">Summary</h3>
Macro to convert a markdown style document to html. This is not supposed to supplant proper tools like pandoc, but only to aid visualization on a closed system that does not allow the installation of software.<br>
<h3 id="usage189">Usage</h3>
The tool automatically creates a table of contents<br>
The tool supports the following markdown markup:<br>
<ul>
<li>Pandoc-style metadata prefixed with %</li>
<li>Headers prefixed with N### depending on the level (e.g. #### is 4th level)</li>
<li>Unordered lists prefixed with *</li>
<li>Order lists prefixed with n.</li>
</ul>
Not supported is:<br>
<ul>
<li>Nested lists</li>
<li>Bold/italic text</li>
<li>Links, images etc.</li>
</ul>
<h3 id="parameters203">Parameters</h3>
<ul>
<li>in_file_md = = The input markdown file with documentation (e.g. "C:\source\source_documentation.md"")</li>
<li>out_file_html = = The output html file with documentation (e.g. "C:\source\source_documentation.htm"")</li>
<li>debug_mode = Use debug mode or not [0 or 1, optional]</li>
</ul>
<h3 id="final208">Final</h3>
Authors: Christiaan Righolt<br>
Copyright (c) 2016 Vaccine and Drug Evaluation Centre, Winnipeg.<br>
<h2 id="macro_diary212">macro_diary</h2>
File location: C:\Users\righoltc\Documents\GitHub\code-diary-sas\source\macro_diary.sas<br>
<h3 id="summary214">Summary</h3>
Macro to parse documentation for all sas macros and scripts in a root directory.<br>
<h3 id="usage217">Usage</h3>
See sample_macro_documentation for markup of files.<br>
<h3 id="parameters220">Parameters</h3>
<ul>
<li>source_dir = The source root directory (e.g. C:\source\), the folder &source_dir._archive is skipped</li>
<li>out_file_md = The output markdown file with documentation (e.g. 'C:\source\source_documentation.txt')</li>
<li>debug_mode = Use debug mode or not [0 or 1, optional]</li>
</ul>
<h3 id="final225">Final</h3>
Authors: Christiaan Righolt<br>
Copyright (c) 2016 Vaccine and Drug Evaluation Centre, Winnipeg.<br>
<h2 id="sample_macro_documentation229">sample_macro_documentation</h2>
File location: C:\Users\righoltc\Documents\GitHub\code-diary-sas\source\sample_macro_documentation.sas<br>
<h3 id="summary231">Summary</h3>
This file is a example/template for macro documentation that describes what sections could be included. This documentation is written in markdown.<br>
<h3 id="usage234">Usage</h3>
General comments on how to use it. (e.g. macro's to call before and or after this one)<br>
A list of parameters (and their meaning) used in the macro.<br>
<ul>
<li>parameter_1 = First parameter</li>
<li>parameter_2 = Second parameter [optional]</li>
</ul>
<h3 id="notes241">Notes</h3>
Other detailed information about how to use the macro properly (e.g. details on the format of certain parameters)<br>
<h3 id="known_issues244">Known issues</h3>
List of known issues/warnings/etc. for the macro.<br>
<ul>
<li>This file is not really code, just documentation</li>
</ul>
<h3 id="version_history248">Version history</h3>
<ul>
<li>v1.1.1; Programmer Two, August 2016; Implemented documentation house style.</li>
<li>v1.1.0; Programmer Two, June 2016; A way better version with added functionality XYZ</li>
<li>v1.0.0; Programmer One, May 2016; Initial version</li>
</ul>
Placeholder copyright line (c).<br>
<h1 id="files_without_documentation256">Files without documentation</h1>
<ul>
<li>C:\Users\righoltc\Documents\GitHub\code-diary-sas\demo\generate_documentation.sas</li>
<li>C:\Users\righoltc\Documents\GitHub\code-diary-sas\demo\generate_macro_documentation.sas</li>
<li>C:\Users\righoltc\Documents\GitHub\code-diary-sas\demo\project_main.sas</li>
<li>C:\Users\righoltc\Documents\GitHub\code-diary-sas\demo\project_script.sas</li>
</ul>
</body>
</html>
